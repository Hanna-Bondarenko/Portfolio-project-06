{"version":3,"file":"index.js","sources":["../src/js/reviews.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport Swiper from 'swiper/bundle';\n\nconst reviewList = document.querySelector(\".reviews-list\");\nconst swiperControllButton = document.querySelector(\".swiper-controll-buttons\");\n\n// Set axios base URL\naxios.defaults.baseURL = 'https://portfolio-js.b.goit.study';\n\n// Function to fetch reviews\nconst fetchReviews = () => {\n  return axios.get('/api/reviews').then(response => response.data);\n};\n\n// Function to create a review HTML element\nfunction createReviewLi(reviewData) {\n  return `\n     <li class=\"reviews-list-item swiper-slide\">\n            <img src=\"${reviewData.avatar_url}\" alt=\"${reviewData.author}\" class=\"reviews-list-item-img\" />\n            <h3 class=\"reviews-list-item-author\">${reviewData.author}</h3>\n            <p class=\"reviews-list-item-text\">${reviewData.review}</p>\n     </li>\n   `;\n}\n\n// Function to render review cards\nconst renderCard = (reviews) => {\n  const markup = reviews.map(createReviewLi).join(\"\");\n  reviewList.insertAdjacentHTML('beforeend', markup);\n};\n\n// Async function to handle fetching and rendering reviews\nconst initializeReviews = async () => {\n  try {\n    // Fetch data\n    let data = await fetchReviews();\n    \n    // Render reviews\n    renderCard(data);\n\n    // Initialize Swiper\n    const swiperReviews = new Swiper('.swiper', {\n      slidesPerView: 1,       \n      spaceBetween: 16,   \n      \n      breakpoints: {\n        768: {\n          slidesPerView: 2, \n        },\n        1440: {\n          slidesPerView: 4,\n        },\n      },\n\n      navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev',\n      },\n\n      keyboard: {\n        enabled: true,       \n        onlyInViewport: true \n      },\n\n      grabCursor: true,       \n      mousewheel: {\n        invert: false,       \n      },\n    });\n  }\n  catch (error) {\n    iziToast.error({\n      title: 'Error',\n      position: 'topCenter',\n      message: `Error fetching reviews: ${error}`,\n    });\n    \n    reviewList.insertAdjacentHTML('beforeend', `<p class=\"reviews-error-text\">Not found</p>`);\n    swiperControllButton.classList.add('is-hidden');\n  }\n};\n\ninitializeReviews();"],"names":["reviewList","swiperControllButton","axios","fetchReviews","response","createReviewLi","reviewData","renderCard","reviews","markup","initializeReviews","data","swiperReviews","Swiper","error","iziToast"],"mappings":"owBAIA,MAAMA,EAAa,SAAS,cAAc,eAAe,EACnDC,EAAuB,SAAS,cAAc,0BAA0B,EAG9EC,EAAM,SAAS,QAAU,oCAGzB,MAAMC,EAAe,IACZD,EAAM,IAAI,cAAc,EAAE,KAAKE,GAAYA,EAAS,IAAI,EAIjE,SAASC,EAAeC,EAAY,CAClC,MAAO;AAAA;AAAA,wBAEeA,EAAW,UAAU,UAAUA,EAAW,MAAM;AAAA,mDACrBA,EAAW,MAAM;AAAA,gDACpBA,EAAW,MAAM;AAAA;AAAA,IAGjE,CAGA,MAAMC,EAAcC,GAAY,CAC9B,MAAMC,EAASD,EAAQ,IAAIH,CAAc,EAAE,KAAK,EAAE,EAClDL,EAAW,mBAAmB,YAAaS,CAAM,CACnD,EAGMC,EAAoB,SAAY,CACpC,GAAI,CAEF,IAAIC,EAAO,MAAMR,IAGjBI,EAAWI,CAAI,EAGf,MAAMC,EAAgB,IAAIC,EAAO,UAAW,CAC1C,cAAe,EACf,aAAc,GAEd,YAAa,CACX,IAAK,CACH,cAAe,CAChB,EACD,KAAM,CACJ,cAAe,CAChB,CACF,EAED,WAAY,CACV,OAAQ,sBACR,OAAQ,qBACT,EAED,SAAU,CACR,QAAS,GACT,eAAgB,EACjB,EAED,WAAY,GACZ,WAAY,CACV,OAAQ,EACT,CACP,CAAK,CACF,OACMC,EAAO,CACZC,EAAS,MAAM,CACb,MAAO,QACP,SAAU,YACV,QAAS,2BAA2BD,CAAK,EAC/C,CAAK,EAEDd,EAAW,mBAAmB,YAAa,6CAA6C,EACxFC,EAAqB,UAAU,IAAI,WAAW,CAC/C,CACH,EAEAS,EAAmB"}